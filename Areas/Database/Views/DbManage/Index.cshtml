@using Microsoft.EntityFrameworkCore
@using System.Data
@inject AppDBContext dbContext

<h1>Thong tin ve co so du lieu</h1>
@{
    ViewData["Title"] = "Thong tin DB";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var can_connect = dbContext.Database.CanConnect();

    dbContext.Database.GetPendingMigrations();
}

<partial name="_AlertMessage" />

<h2>Thong tin</h2>
<p>Database : @dbName</p>
<p>Source : @connect.DataSource</p>
<p>State : @connect.State</p>
<hr>
<h2>Migrations</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations()) 
{
    <p>@migration</p>

}
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (Pending)</p>

}


@if (!can_connect) {
    <p class="alert alert-danger">Khong co kha nang ket noi den Database</p>
}

@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <button class="btn btn-danger" asp-action="Migrate">Tao Database(Cap nhap Migration)</button>
    </form>
    
}

@if (can_connect) {
    <h2>Cac Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"] </li>
            
        }
    </ul>
    
    <a class="btn btn-danger" asp-action="DeleteDb">Xoa Database: @dbName</a>
    <a class="btn btn-danger" asp-action="SeedData">Seed Data</a>
}